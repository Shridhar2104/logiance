// proto/shipment.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v5.29.0
// source: proto/shipment.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RateRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	OriginPincode      int32                  `protobuf:"varint,1,opt,name=origin_pincode,json=originPincode,proto3" json:"origin_pincode,omitempty"`
	DestinationPincode int32                  `protobuf:"varint,2,opt,name=destination_pincode,json=destinationPincode,proto3" json:"destination_pincode,omitempty"`
	Weight             int32                  `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`                                // in grams
	CourierCodes       []string               `protobuf:"bytes,4,rep,name=courier_codes,json=courierCodes,proto3" json:"courier_codes,omitempty"` // Optional: specific couriers to check
	PaymentMode        string                 `protobuf:"bytes,5,opt,name=payment_mode,json=paymentMode,proto3" json:"payment_mode,omitempty"`    // COD/Prepaid
	Dimensions         []*Package             `protobuf:"bytes,6,rep,name=dimensions,proto3" json:"dimensions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RateRequest) Reset() {
	*x = RateRequest{}
	mi := &file_proto_shipment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateRequest) ProtoMessage() {}

func (x *RateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_shipment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateRequest.ProtoReflect.Descriptor instead.
func (*RateRequest) Descriptor() ([]byte, []int) {
	return file_proto_shipment_proto_rawDescGZIP(), []int{0}
}

func (x *RateRequest) GetOriginPincode() int32 {
	if x != nil {
		return x.OriginPincode
	}
	return 0
}

func (x *RateRequest) GetDestinationPincode() int32 {
	if x != nil {
		return x.DestinationPincode
	}
	return 0
}

func (x *RateRequest) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *RateRequest) GetCourierCodes() []string {
	if x != nil {
		return x.CourierCodes
	}
	return nil
}

func (x *RateRequest) GetPaymentMode() string {
	if x != nil {
		return x.PaymentMode
	}
	return ""
}

func (x *RateRequest) GetDimensions() []*Package {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

type Package struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Length        float32                `protobuf:"fixed32,1,opt,name=length,proto3" json:"length,omitempty"`
	Width         float32                `protobuf:"fixed32,2,opt,name=width,proto3" json:"width,omitempty"`
	Height        float32                `protobuf:"fixed32,3,opt,name=height,proto3" json:"height,omitempty"`
	Weight        float32                `protobuf:"fixed32,4,opt,name=weight,proto3" json:"weight,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Package) Reset() {
	*x = Package{}
	mi := &file_proto_shipment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Package) ProtoMessage() {}

func (x *Package) ProtoReflect() protoreflect.Message {
	mi := &file_proto_shipment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Package.ProtoReflect.Descriptor instead.
func (*Package) Descriptor() ([]byte, []int) {
	return file_proto_shipment_proto_rawDescGZIP(), []int{1}
}

func (x *Package) GetLength() float32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *Package) GetWidth() float32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Package) GetHeight() float32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Package) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type AvailabilityRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	OriginPincode      int32                  `protobuf:"varint,1,opt,name=origin_pincode,json=originPincode,proto3" json:"origin_pincode,omitempty"`
	DestinationPincode int32                  `protobuf:"varint,2,opt,name=destination_pincode,json=destinationPincode,proto3" json:"destination_pincode,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *AvailabilityRequest) Reset() {
	*x = AvailabilityRequest{}
	mi := &file_proto_shipment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AvailabilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailabilityRequest) ProtoMessage() {}

func (x *AvailabilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_shipment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailabilityRequest.ProtoReflect.Descriptor instead.
func (*AvailabilityRequest) Descriptor() ([]byte, []int) {
	return file_proto_shipment_proto_rawDescGZIP(), []int{2}
}

func (x *AvailabilityRequest) GetOriginPincode() int32 {
	if x != nil {
		return x.OriginPincode
	}
	return 0
}

func (x *AvailabilityRequest) GetDestinationPincode() int32 {
	if x != nil {
		return x.DestinationPincode
	}
	return 0
}

type CourierListResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Success           bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	AvailableCouriers []*CourierInfo         `protobuf:"bytes,2,rep,name=available_couriers,json=availableCouriers,proto3" json:"available_couriers,omitempty"`
	Error             string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CourierListResponse) Reset() {
	*x = CourierListResponse{}
	mi := &file_proto_shipment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourierListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourierListResponse) ProtoMessage() {}

func (x *CourierListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_shipment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourierListResponse.ProtoReflect.Descriptor instead.
func (*CourierListResponse) Descriptor() ([]byte, []int) {
	return file_proto_shipment_proto_rawDescGZIP(), []int{3}
}

func (x *CourierListResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CourierListResponse) GetAvailableCouriers() []*CourierInfo {
	if x != nil {
		return x.AvailableCouriers
	}
	return nil
}

func (x *CourierListResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CourierInfo struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	CourierCode       string                 `protobuf:"bytes,1,opt,name=courier_code,json=courierCode,proto3" json:"courier_code,omitempty"`
	CourierName       string                 `protobuf:"bytes,2,opt,name=courier_name,json=courierName,proto3" json:"courier_name,omitempty"`
	SupportedServices []string               `protobuf:"bytes,3,rep,name=supported_services,json=supportedServices,proto3" json:"supported_services,omitempty"` // express, surface, etc.
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CourierInfo) Reset() {
	*x = CourierInfo{}
	mi := &file_proto_shipment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourierInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourierInfo) ProtoMessage() {}

func (x *CourierInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_shipment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourierInfo.ProtoReflect.Descriptor instead.
func (*CourierInfo) Descriptor() ([]byte, []int) {
	return file_proto_shipment_proto_rawDescGZIP(), []int{4}
}

func (x *CourierInfo) GetCourierCode() string {
	if x != nil {
		return x.CourierCode
	}
	return ""
}

func (x *CourierInfo) GetCourierName() string {
	if x != nil {
		return x.CourierName
	}
	return ""
}

func (x *CourierInfo) GetSupportedServices() []string {
	if x != nil {
		return x.SupportedServices
	}
	return nil
}

type MultiRateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Rates         []*CourierRate         `protobuf:"bytes,2,rep,name=rates,proto3" json:"rates,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MultiRateResponse) Reset() {
	*x = MultiRateResponse{}
	mi := &file_proto_shipment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultiRateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiRateResponse) ProtoMessage() {}

func (x *MultiRateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_shipment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiRateResponse.ProtoReflect.Descriptor instead.
func (*MultiRateResponse) Descriptor() ([]byte, []int) {
	return file_proto_shipment_proto_rawDescGZIP(), []int{5}
}

func (x *MultiRateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MultiRateResponse) GetRates() []*CourierRate {
	if x != nil {
		return x.Rates
	}
	return nil
}

func (x *MultiRateResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CourierRate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CourierCode   string                 `protobuf:"bytes,1,opt,name=courier_code,json=courierCode,proto3" json:"courier_code,omitempty"`
	CourierName   string                 `protobuf:"bytes,2,opt,name=courier_name,json=courierName,proto3" json:"courier_name,omitempty"`
	ServiceType   string                 `protobuf:"bytes,3,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	RateDetails   *RateData              `protobuf:"bytes,4,opt,name=rate_details,json=rateDetails,proto3" json:"rate_details,omitempty"`
	EstimatedDays int32                  `protobuf:"varint,5,opt,name=estimated_days,json=estimatedDays,proto3" json:"estimated_days,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourierRate) Reset() {
	*x = CourierRate{}
	mi := &file_proto_shipment_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourierRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourierRate) ProtoMessage() {}

func (x *CourierRate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_shipment_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourierRate.ProtoReflect.Descriptor instead.
func (*CourierRate) Descriptor() ([]byte, []int) {
	return file_proto_shipment_proto_rawDescGZIP(), []int{6}
}

func (x *CourierRate) GetCourierCode() string {
	if x != nil {
		return x.CourierCode
	}
	return ""
}

func (x *CourierRate) GetCourierName() string {
	if x != nil {
		return x.CourierName
	}
	return ""
}

func (x *CourierRate) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

func (x *CourierRate) GetRateDetails() *RateData {
	if x != nil {
		return x.RateDetails
	}
	return nil
}

func (x *CourierRate) GetEstimatedDays() int32 {
	if x != nil {
		return x.EstimatedDays
	}
	return 0
}

type RateData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalAmount   float64                `protobuf:"fixed64,1,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	GrossAmount   float64                `protobuf:"fixed64,2,opt,name=gross_amount,json=grossAmount,proto3" json:"gross_amount,omitempty"`
	TaxAmount     float64                `protobuf:"fixed64,3,opt,name=tax_amount,json=taxAmount,proto3" json:"tax_amount,omitempty"`
	CodCharges    float64                `protobuf:"fixed64,4,opt,name=cod_charges,json=codCharges,proto3" json:"cod_charges,omitempty"`
	FuelSurcharge float64                `protobuf:"fixed64,5,opt,name=fuel_surcharge,json=fuelSurcharge,proto3" json:"fuel_surcharge,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RateData) Reset() {
	*x = RateData{}
	mi := &file_proto_shipment_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateData) ProtoMessage() {}

func (x *RateData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_shipment_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateData.ProtoReflect.Descriptor instead.
func (*RateData) Descriptor() ([]byte, []int) {
	return file_proto_shipment_proto_rawDescGZIP(), []int{7}
}

func (x *RateData) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *RateData) GetGrossAmount() float64 {
	if x != nil {
		return x.GrossAmount
	}
	return 0
}

func (x *RateData) GetTaxAmount() float64 {
	if x != nil {
		return x.TaxAmount
	}
	return 0
}

func (x *RateData) GetCodCharges() float64 {
	if x != nil {
		return x.CodCharges
	}
	return 0
}

func (x *RateData) GetFuelSurcharge() float64 {
	if x != nil {
		return x.FuelSurcharge
	}
	return 0
}

var File_proto_shipment_proto protoreflect.FileDescriptor

var file_proto_shipment_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0xf8, 0x01, 0x0a, 0x0b, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x70, 0x69, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x50, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x64, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73,
	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52,
	0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x67, 0x0a, 0x07, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x22, 0x6d, 0x0a, 0x13, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x70, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x50, 0x69, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x70, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x12, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x44, 0x0a, 0x12, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x75,
	0x72, 0x69, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x82, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x11, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x70, 0x0a, 0x11, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x72, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x52, 0x05, 0x72, 0x61, 0x74,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xd4, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x75,
	0x72, 0x69, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x35, 0x0a, 0x0c, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x72, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x79, 0x73, 0x22,
	0xb7, 0x01, 0x0a, 0x08, 0x52, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x73, 0x73, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x64, 0x43, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x75, 0x65, 0x6c, 0x5f, 0x73, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x66, 0x75, 0x65, 0x6c,
	0x53, 0x75, 0x72, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x32, 0xb1, 0x01, 0x0a, 0x0f, 0x53, 0x68,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x46, 0x0a,
	0x0e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x15, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x2e,
	0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73,
	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x09, 0x5a,
	0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_shipment_proto_rawDescOnce sync.Once
	file_proto_shipment_proto_rawDescData = file_proto_shipment_proto_rawDesc
)

func file_proto_shipment_proto_rawDescGZIP() []byte {
	file_proto_shipment_proto_rawDescOnce.Do(func() {
		file_proto_shipment_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_shipment_proto_rawDescData)
	})
	return file_proto_shipment_proto_rawDescData
}

var file_proto_shipment_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_shipment_proto_goTypes = []any{
	(*RateRequest)(nil),         // 0: shipment.RateRequest
	(*Package)(nil),             // 1: shipment.Package
	(*AvailabilityRequest)(nil), // 2: shipment.AvailabilityRequest
	(*CourierListResponse)(nil), // 3: shipment.CourierListResponse
	(*CourierInfo)(nil),         // 4: shipment.CourierInfo
	(*MultiRateResponse)(nil),   // 5: shipment.MultiRateResponse
	(*CourierRate)(nil),         // 6: shipment.CourierRate
	(*RateData)(nil),            // 7: shipment.RateData
}
var file_proto_shipment_proto_depIdxs = []int32{
	1, // 0: shipment.RateRequest.dimensions:type_name -> shipment.Package
	4, // 1: shipment.CourierListResponse.available_couriers:type_name -> shipment.CourierInfo
	6, // 2: shipment.MultiRateResponse.rates:type_name -> shipment.CourierRate
	7, // 3: shipment.CourierRate.rate_details:type_name -> shipment.RateData
	0, // 4: shipment.ShipmentService.CalculateRates:input_type -> shipment.RateRequest
	2, // 5: shipment.ShipmentService.GetAvailableCouriers:input_type -> shipment.AvailabilityRequest
	5, // 6: shipment.ShipmentService.CalculateRates:output_type -> shipment.MultiRateResponse
	3, // 7: shipment.ShipmentService.GetAvailableCouriers:output_type -> shipment.CourierListResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_shipment_proto_init() }
func file_proto_shipment_proto_init() {
	if File_proto_shipment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_shipment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_shipment_proto_goTypes,
		DependencyIndexes: file_proto_shipment_proto_depIdxs,
		MessageInfos:      file_proto_shipment_proto_msgTypes,
	}.Build()
	File_proto_shipment_proto = out.File
	file_proto_shipment_proto_rawDesc = nil
	file_proto_shipment_proto_goTypes = nil
	file_proto_shipment_proto_depIdxs = nil
}
